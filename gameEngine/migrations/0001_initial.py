# Generated by Django 5.2.6 on 2025-10-29 10:05

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("icon", models.CharField(max_length=10)),
                ("description", models.TextField()),
                (
                    "badge_type",
                    models.CharField(
                        choices=[
                            ("achievement", "Achievement"),
                            ("milestone", "Milestone"),
                            ("special", "Special"),
                            ("seasonal", "Seasonal"),
                        ],
                        default="achievement",
                        max_length=20,
                    ),
                ),
                ("requirement_type", models.CharField(max_length=50)),
                ("requirement_value", models.IntegerField()),
                ("reward_xp", models.IntegerField(default=0)),
                ("reward_tickets", models.IntegerField(default=0)),
                ("reward_coins", models.IntegerField(default=0)),
                ("reward_stars", models.IntegerField(default=0)),
                ("is_secret", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("common", "Common"),
                            ("rare", "Rare"),
                            ("epic", "Epic"),
                            ("legendary", "Legendary"),
                        ],
                        default="common",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "badges",
                "ordering": ["rarity", "name"],
            },
        ),
        migrations.CreateModel(
            name="Venture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("venture_type", models.CharField(max_length=50)),
                ("icon", models.CharField(max_length=10)),
                ("description", models.TextField()),
                ("max_players", models.IntegerField(default=50)),
                ("current_players", models.IntegerField(default=0)),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("Easy", "Easy"),
                            ("Medium", "Medium"),
                            ("Hard", "Hard"),
                            ("Expert", "Expert"),
                        ],
                        max_length=10,
                    ),
                ),
                ("base_equity", models.FloatField(default=100.0)),
                ("winner_equity", models.FloatField(default=20.0)),
                ("community_equity", models.FloatField(default=80.0)),
                ("duration_days", models.IntegerField(default=30)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("upcoming", "Upcoming"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("min_level_required", models.IntegerField(default=1)),
                ("ticket_cost", models.IntegerField(default=1)),
                (
                    "total_investment",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("success_rate", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "ventures",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PlayerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tickets", models.IntegerField(default=5)),
                ("total_equity", models.FloatField(default=0.0)),
                ("xp", models.IntegerField(default=0)),
                ("level", models.IntegerField(default=1)),
                ("total_ventures_joined", models.IntegerField(default=0)),
                ("total_ventures_won", models.IntegerField(default=0)),
                ("total_equity_earned", models.FloatField(default=0.0)),
                ("stars", models.IntegerField(default=0)),
                ("coins", models.IntegerField(default=1000)),
                ("avatar", models.CharField(default="ðŸš€", max_length=10)),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("dark", "Dark Theme"),
                            ("light", "Light Theme"),
                            ("nebula", "Nebula Theme"),
                        ],
                        default="dark",
                        max_length=20,
                    ),
                ),
                ("bio", models.TextField(blank=True, max_length=500, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "twitter_handle",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                ("push_notifications", models.BooleanField(default=True)),
                ("newsletter_subscribed", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_active", models.DateTimeField(auto_now=True)),
                ("streak_days", models.IntegerField(default=0)),
                ("last_login_streak", models.DateField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playerprofile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Profile",
                "verbose_name_plural": "Player Profiles",
                "db_table": "player_profiles",
                "ordering": ["-total_equity", "-level"],
            },
        ),
        migrations.CreateModel(
            name="PlayerBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unlocked_at", models.DateTimeField(auto_now_add=True)),
                ("is_equipped", models.BooleanField(default=False)),
                (
                    "badge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="players_earned",
                        to="gameEngine.badge",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="badges_earned",
                        to="gameEngine.playerprofile",
                    ),
                ),
            ],
            options={
                "db_table": "player_badges",
                "ordering": ["-unlocked_at"],
                "unique_together": {("player", "badge")},
            },
        ),
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("venture_join", "Venture Joined"),
                            ("venture_complete", "Venture Completed"),
                            ("level_up", "Level Up"),
                            ("badge_earned", "Badge Earned"),
                            ("purchase", "Purchase"),
                            ("social", "Social"),
                            ("system", "System"),
                        ],
                        default="system",
                        max_length=20,
                    ),
                ),
                ("icon", models.CharField(max_length=10)),
                ("description", models.TextField()),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="gameEngine.playerprofile",
                    ),
                ),
            ],
            options={
                "db_table": "activities",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["player", "created_at"],
                        name="activities_player__76597d_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="PlayerVenture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "equity_share",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ]
                    ),
                ),
                (
                    "initial_investment",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "current_value",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("is_winner", models.BooleanField(default=False)),
                ("rank", models.IntegerField(blank=True, null=True)),
                ("performance_score", models.FloatField(default=0.0)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_ventures",
                        to="gameEngine.playerprofile",
                    ),
                ),
                (
                    "venture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="gameEngine.venture",
                    ),
                ),
            ],
            options={
                "db_table": "player_ventures",
                "ordering": ["-joined_at"],
                "unique_together": {("player", "venture")},
            },
        ),
    ]
