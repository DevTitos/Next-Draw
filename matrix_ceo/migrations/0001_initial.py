# Generated by Django 5.2.6 on 2025-10-30 17:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CorporateBoard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("established_date", models.DateTimeField(auto_now_add=True)),
                ("governance_token", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "corporate_boards",
            },
        ),
        migrations.CreateModel(
            name="CEOSelection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("screening", "Candidate Screening"),
                            ("matrix_challenge", "Matrix Challenge Phase"),
                            ("board_interview", "Board Interview"),
                            ("reference_check", "Reference & Background Check"),
                            ("offer_extended", "Offer Extended"),
                            ("accepted", "Accepted - Active CEO"),
                            ("rejected", "Rejected"),
                            ("withdrawn", "Candidate Withdrew"),
                        ],
                        default="screening",
                        max_length=20,
                    ),
                ),
                ("application_date", models.DateTimeField(auto_now_add=True)),
                ("challenge_score", models.IntegerField(default=0)),
                ("strategic_insights", models.JSONField(default=list)),
                ("board_interview_score", models.IntegerField(blank=True, null=True)),
                ("reference_score", models.IntegerField(blank=True, null=True)),
                ("final_decision", models.TextField(blank=True)),
                ("started_matrix_at", models.DateTimeField(blank=True, null=True)),
                ("completed_matrix_at", models.DateTimeField(blank=True, null=True)),
                ("decision_date", models.DateTimeField(blank=True, null=True)),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ceo_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "ceo_selections",
            },
        ),
        migrations.CreateModel(
            name="StrategicProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("domain", models.CharField(max_length=100)),
                ("vision_statement", models.TextField()),
                ("mission_objectives", models.JSONField(default=list)),
                ("success_metrics", models.JSONField(default=dict)),
                ("ceo_compensation", models.JSONField(default=dict)),
                ("term_duration", models.IntegerField(default=24)),
                ("reporting_structure", models.JSONField(default=dict)),
                (
                    "complexity",
                    models.CharField(
                        choices=[
                            ("entry", "Entry Level (1-2 years experience)"),
                            ("mid", "Mid Level (3-5 years experience)"),
                            ("senior", "Senior Level (5-8 years experience)"),
                            ("executive", "Executive Level (8+ years experience)"),
                        ],
                        default="mid",
                        max_length=20,
                    ),
                ),
                ("strategic_challenges", models.JSONField(default=list)),
                ("critical_decisions", models.JSONField(default=list)),
                ("risk_factors", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft - Board Review"),
                            ("approved", "Approved - Seeking CEO"),
                            ("active", "Active - CEO Leading"),
                            ("paused", "Paused - Board Review"),
                            ("completed", "Completed - Success"),
                            ("terminated", "Terminated - Failed"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "active_ceo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="active_projects",
                        to="matrix_ceo.ceoselection",
                    ),
                ),
                (
                    "board",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="matrix_ceo.corporateboard",
                    ),
                ),
            ],
            options={
                "db_table": "strategic_projects",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="ceoselection",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ceo_selections",
                to="matrix_ceo.strategicproject",
            ),
        ),
        migrations.CreateModel(
            name="StrategicPuzzleMatrix",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("current_node", models.IntegerField(default=0)),
                ("completed_nodes", models.JSONField(default=list)),
                ("node_states", models.JSONField(default=dict)),
                ("strategic_depth", models.IntegerField(default=1)),
                ("paradox_level", models.IntegerField(default=0)),
                ("solution_patterns", models.JSONField(default=list)),
                ("failed_approaches", models.JSONField(default=list)),
                ("cycles_completed", models.IntegerField(default=0)),
                ("total_decisions_made", models.IntegerField(default=0)),
                ("cumulative_complexity", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                (
                    "ceo_selection",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="puzzle_matrix",
                        to="matrix_ceo.ceoselection",
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="ceoselection",
            unique_together={("project", "candidate")},
        ),
    ]
